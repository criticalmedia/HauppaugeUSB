Split up logging levels.

From: John Poet <jpoet@mythtv.org>


---
 Common/EncoderDev/HAPIHost/CHapi.cpp |    7 +++++--
 Common/EncoderDev/encoderDev_DXT.cpp |   19 ++++++++++---------
 2 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/Common/EncoderDev/HAPIHost/CHapi.cpp b/Common/EncoderDev/HAPIHost/CHapi.cpp
index 5304b6c..0064fc1 100644
--- a/Common/EncoderDev/HAPIHost/CHapi-orig.cpp	2018-02-23 14:57:38.416150783 -0700
+++ b/Common/EncoderDev/HAPIHost/CHapi.cpp	2018-02-23 15:00:12.521502798 -0700
@@ -919,7 +919,7 @@
 				if(dwDXT_BKV_config >= BkvCount){
 					dwDXT_BKV_config = 0;
 				}
-				DbgLogWarn((" using BkvArray[%u] w/DXT_CLK_24\n", dwDXT_BKV_config));
+				DbgLogInfo((" using BkvArray[%u] w/DXT_CLK_24\n", dwDXT_BKV_config));
 
 				memcpy(&gInitParam.bkvConfig, BkvArray[dwDXT_BKV_config], sizeof(MCHIP_DRAM_BKV));
 				boardInfo.dxt_clk = DXT_CLK_24;
@@ -1604,8 +1604,11 @@
         Uint32 reg_value;
         if (hcwGetRegistryDWORD(param_name, (LPDWORD)&reg_value))
         {
-            DbgLogInfo(("set_param(%p, %s, %u) override by registry %u\n", pParam, param_name, value, reg_value));
-            value = reg_value;
+            if (value != reg_value)
+            {
+                DbgLogInfo(("set_param(%p, %s, %u) override by registry %u\n", pParam, param_name, value, reg_value));
+                value = reg_value;
+            }
         }
 #endif
 
--- a/Common/EncoderDev/encoderDev_DXT.cpp-orig	2018-01-10 16:44:47.868400247 -0700
+++ a/Common/EncoderDev/encoderDev_DXT.cpp	2018-01-10 16:48:26.306701484 -0700
@@ -10,7 +10,7 @@
 #include <math.h>
 
 encoderDev_DXT_t::~encoderDev_DXT_t(){
-	wrapLogDebug("encoderDev_DXT_t::~encoderDev_DXT_t()");
+	wrapLogInfo("encoderDev_DXT_t::~encoderDev_DXT_t()");
 	USBBootMChip_t *mchip = (USBBootMChip_t*)m_mchip;
 	CHapi *hapi = (CHapi*)m_hapi;
 
@@ -21,7 +21,7 @@
 }
 
 bool encoderDev_DXT_t::init() {
-	wrapLogDebug("encoderDev_DXT_t::init()");
+	wrapLogInfo("encoderDev_DXT_t::init()");
 	m_mchip = (void*)new USBBootMChip_t(m_fx2);
 	m_hapi = (void*)new CHapi((USBBootMChip_t*)m_mchip);
 
@@ -180,14 +180,14 @@
 }
 
 bool encoderDev_DXT_t::startCapture() {
-	wrapLogDebug("encoderDev_DXT_t::startCapture()");
+	wrapLogInfo("encoderDev_DXT_t::startCapture()");
 	CHapi *hapi = (CHapi*)m_hapi;
 	if(!hapi->HapiStart()) return false;
 	return true;
 }
 
 bool encoderDev_DXT_t::stopCapture() {
-	wrapLogDebug("encoderDev_DXT_t::stopCapture()");
+	wrapLogInfo("encoderDev_DXT_t::stopCapture()");
 	CHapi *hapi = (CHapi*)m_hapi;
 	if(!hapi->HapiStop()) return false;
 	return true;
--- a/Common/EncoderDev/HAPIHost/MChip/mchip_base-orig.cpp	2018-01-13 15:47:26.340149291 -0700
+++ a/Common/EncoderDev/HAPIHost/MChip/mchip_base.cpp	2018-01-13 16:11:22.812969453 -0700
@@ -106,7 +106,7 @@
 	} else if(ret == USBWRAP_ERROR_TIMEOUT) {
 		rst = 2;
 		if(dwTimeout < 1500) {
-			DbgLogError(("UsbReadWriteBulk() TIMEOUT(%d) (recovery)!\n", dwTimeout));
+			DbgLogInfo(("UsbReadWriteBulk() TIMEOUT(%d) (recovery)!\n", dwTimeout));
 			statusErr = 0;
 			statusCnt = 0;
 		} else {
